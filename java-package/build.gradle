/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0.1/userguide/java_library_plugin.html
 */

plugins {
    id 'java-library'
    id 'com.google.protobuf' version '0.8.8'
    id 'maven'
    id 'signing'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'io.codearte.nexus-staging' version '0.30.0'
}


java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    jcenter()
}

dependencies {
    implementation 'io.grpc:grpc-netty-shaded:1.26.0'
    implementation 'io.grpc:grpc-protobuf:1.26.0'
    implementation 'io.grpc:grpc-stub:1.26.0'
    implementation 'javax.annotation:javax.annotation-api:1.2'
}

group = 'io.hydrosphere'
archivesBaseName = 'serving-grpc-java'
version = findProperty('buildVersion')

protobuf {
  protoc {
    artifact = 'com.google.protobuf:protoc:3.11.0'
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.26.0'
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc { }
    }
  }
}

signing {
    useGpgCmd()
    sign configurations.archives
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                /* groovylint-disable-next-line DuplicateStringLiteral */
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }
            pom.project {
                name 'serving-grpc-java'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Hydroserving GRPC api impl for Java'
                url 'https://hydrosphere.io/'

                scm {
                    url 'https://github.com/Hydrospheredata/hydro-serving-protos/'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'tidylobster'
                        name 'Ilnur Garifullin'
                        email 'igarifullin@provectus.com'
                    }
                    developer {
                        id 'KineticCookie'
                        name 'Bulat Lutfullin'
                        email 'blutfullin@hydrosphere.io'
                    }
                }
            }
        }
    }
}